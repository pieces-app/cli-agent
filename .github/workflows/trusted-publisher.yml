name: Publish to PyPI with Trusted Publisher

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish_type:
        description: 'Publish type'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Build Package
        run: python -m build
        
      - name: Check Distribution
        run: twine check dist/*
        
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          artifact-name: pieces-cli-sbom.spdx.json
          output-file: dist/pieces-cli-sbom.spdx.json
          
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  publish-testpypi:
    name: Publish to TestPyPI
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.publish_type == 'testpypi'
    needs: build
    runs-on: ubuntu-latest
    environment: testpypi
    permissions:
      id-token: write
      contents: read
      attestations: write
      
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
          
      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'dist/*.whl'
          
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  publish-pypi:
    name: Publish to PyPI
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_type == 'pypi')
    needs: build
    runs-on: ubuntu-latest
    environment: pypi-production
    permissions:
      id-token: write
      contents: read
      attestations: write
      
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
          
      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'dist/*.whl'
          
      - name: Generate Attestation
        uses: actions/attest-sbom@v1
        with:
          subject-path: 'dist/*.whl'
          sbom-path: 'dist/pieces-cli-sbom.spdx.json'
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # No credentials needed - uses trusted publisher

  verify-publication:
    name: Verify Publication
    needs: [publish-pypi]
    if: always() && needs.publish-pypi.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Package Availability
        run: sleep 60
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Create Test Environment
        run: python -m venv test-env
        
      - name: Install Published Package
        run: |
          source test-env/bin/activate
          pip install pieces-cli
          
      - name: Verify Installation
        run: |
          source test-env/bin/activate
          pieces --version
          
      - name: Run Basic Tests
        run: |
          source test-env/bin/activate
          pieces help
          
      - name: Create Summary
        run: |
          echo "## Publication Verification" >> $GITHUB_STEP_SUMMARY
          echo "✅ Package successfully published to PyPI" >> $GITHUB_STEP_SUMMARY
          echo "✅ Installation verification passed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Basic functionality confirmed" >> $GITHUB_STEP_SUMMARY