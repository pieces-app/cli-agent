name: Update Pieces SDK Dependencies

on:
  workflow_dispatch:
  push:
    branches:
      - update-sdks-workflow

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone Pieces OS Client SDK
        run: |
          # Clone the repository
          git clone https://github.com/pieces-app/pieces-os-client-sdk-for-python.git pieces-sdk-main
          cd pieces-sdk-main
          # Fetch all tags to ensure we have the latest
          git fetch --tags
          # Get the latest tag and checkout
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "Checking out latest tag: $LATEST_TAG"
          git checkout

      - name: Check for existing wrapper and prepare vendor directory
        run: |
          # Check if wrapper already exists in the current vendor directory
          WRAPPER_EXISTS_IN_VENDOR=false
          if [ -d "src/pieces/_vendor/pieces_os_client/wrapper" ]; then
            WRAPPER_EXISTS_IN_VENDOR=true
            echo "Wrapper already exists in vendor directory"
          else
            echo "Wrapper does not exist in vendor directory, will need to fetch from cli-agent-pydantic-v2 branch"
          fi
          
          # Save the wrapper if it exists before removing vendor directory
          if [ "$WRAPPER_EXISTS_IN_VENDOR" = "true" ]; then
            echo "Saving existing wrapper"
            cp -r src/pieces/_vendor/pieces_os_client/wrapper /tmp/saved_wrapper
          fi
          
          rm -rf src/pieces/_vendor
          
          mkdir -p src/pieces/_vendor
          
          cp -r pieces-sdk-main/src/pieces_os_client src/pieces/_vendor/pieces_os_client
          
          # Remove the wrapper from main branch (we always want to use the one from cli-agent-pydantic-v2)
          rm -rf src/pieces/_vendor/pieces_os_client/wrapper
          
          # If wrapper existed in vendor, restore it
          if [ "$WRAPPER_EXISTS_IN_VENDOR" = "true" ]; then
            echo "Restoring saved wrapper"
            cp -r /tmp/saved_wrapper src/pieces/_vendor/pieces_os_client/wrapper
            rm -rf /tmp/saved_wrapper
          else
            # Only clone cli-agent-pydantic-v2 branch if we need the wrapper
            echo "Cloning cli-agent-pydantic-v2 branch to get wrapper"
            git clone -b cli-agent-pydantic-v2 https://github.com/pieces-app/pieces-os-client-sdk-for-python.git pieces-sdk-wrapper
            cp -r pieces-sdk-wrapper/src/pieces_os_client/wrapper src/pieces/_vendor/pieces_os_client/wrapper
            rm -rf pieces-sdk-wrapper
          fi
          find . ## list all files in the current directory

      - name: Update imports - pieces_os_client to pieces._vendor.pieces_os_client
        run: |
          # Find all Python files in the _vendor directory and update imports
          find src/pieces/_vendor -name "*.py" -type f -exec sed -i \
            -e 's/from pieces_os_client/from pieces._vendor.pieces_os_client/g' \
            -e 's/import pieces_os_client/import pieces._vendor.pieces_os_client/g' {} +

          # Fix the specific importlib import in api_client.py
          if [ -f "src/pieces/_vendor/pieces_os_client/api_client.py" ]; then
            sed -i 's/importlib\.import_module(f"pieces_os_client\./importlib.import_module(f"pieces._vendor.pieces_os_client./g' src/pieces/_vendor/pieces_os_client/api_client.py
          fi

      - name: Update imports - pydantic to pydantic.v1
        run: |
          # Find all Python files in the _vendor directory and update all pydantic references
          find src/pieces/_vendor -name "*.py" -type f -exec sed -i \
            -e 's/\bpydantic\b/pydantic.v1/g' {} +

      - name: Create __init__.py files
        run: |
          # Ensure __init__.py exists in _vendor directory
          touch src/pieces/_vendor/__init__.py

      - name: Clean up cloned repositories
        run: |
          rm -rf pieces-sdk-main

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update vendored Pieces OS Client SDK"
          title: "Update vendored Pieces OS Client SDK"
          body: |
            This PR updates the vendored Pieces OS Client SDK:
            - Pulled latest SDK from https://github.com/pieces-app/pieces-os-client-sdk-for-python/
          branch: update-pieces-sdk-${{ github.run_number }}
          reviewers: bishoy-at-pieces
          delete-branch: true
