# coding: utf-8

"""
    Pieces Isomorphic OpenAPI

    Endpoints for Assets, Formats, Users, Asset, Format, User.

    The version of the OpenAPI document: 1.0
    Contact: tsavo@pieces.app
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic.v1 import BaseModel, Field, StrictInt, StrictStr

class PaddleCheckoutPaymentMethodDetailsCard(BaseModel):
    """
    PaddleCheckoutPaymentMethodDetailsCard
    """
    type: StrictStr = Field(...)
    last4: StrictStr = Field(...)
    expiry_month: StrictInt = Field(...)
    expiry_year: StrictInt = Field(...)
    __properties = ["type", "last4", "expiry_month", "expiry_year"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PaddleCheckoutPaymentMethodDetailsCard:
        """Create an instance of PaddleCheckoutPaymentMethodDetailsCard from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PaddleCheckoutPaymentMethodDetailsCard:
        """Create an instance of PaddleCheckoutPaymentMethodDetailsCard from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PaddleCheckoutPaymentMethodDetailsCard.parse_obj(obj)

        _obj = PaddleCheckoutPaymentMethodDetailsCard.parse_obj({
            "type": obj.get("type"),
            "last4": obj.get("last4"),
            "expiry_month": obj.get("expiry_month"),
            "expiry_year": obj.get("expiry_year")
        })
        return _obj


